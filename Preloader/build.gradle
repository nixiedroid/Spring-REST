import java.text.SimpleDateFormat

plugins {
    id 'application'
}

java {
    base.archivesName = 'premain'
    group = 'com.nixiedroid.rest'
    version = '1'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    group = 'com.nixiedroid.rpc'
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def preMainDir = DEFAULT_BUILD_DIR_NAME + "/libs/" + project.name + "-"+ project.version + "-" + base.archivesName + ".jar"
def preMainClass = "com.nixiedroid.premain.Premain"

compileJava {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

application  {
    mainClass = "com.nixiedroid.Main"
    applicationDefaultJvmArgs = ["-javaagent:" + preMainDir]
}

jar {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Created-By"            : "Gradle ${gradle.gradleVersion}",
                "Build-Timestamp"       : new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                "Build-Jdk"             : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                "Build-OS"              : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                "Premain-class" : preMainClass,
                "Main-Class": application.mainClass
        )
    }
}
repositories {
    mavenCentral()
}

//https://docs.gradle.org/4.9/userguide/working_with_files.html#sec:reproducible_archives
//Make gradle builds deterministic
tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

dependencies {
//    runtimeOnly project(":Spring-REST")
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}